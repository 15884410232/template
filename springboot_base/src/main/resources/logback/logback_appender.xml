<?xml version="1.0" encoding="UTF-8"?>
<included>
    <!--  彩色日志转换器  -->
    <conversionRule conversionWord="clr"
                    converterClass="org.springframework.boot.logging.logback.ColorConverter"/>
    <conversionRule conversionWord="wex"
                    converterClass="org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter"/>
    <conversionRule conversionWord="wEx"
                    converterClass="org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter"/>
    <!--  文件日志输出格式  -->
    <property name="log.file.pattern"
              value="${FILE_LOG_PATTERN:-%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}} ${LOG_LEVEL_PATTERN:-%5p} ${PID:- } --- [%15t] %-40.40logger{39}  %-4line : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"></property>
    <!--  console日志输出格式  -->
    <property name="log.pattern"
              value="${CONSOLE_LOG_PATTERN:-%clr(%d{${LOG_DATEFORMAT_PATTERN:-yyyy-MM-dd HH:mm:ss.SSS}}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(%-4line:){magenta} %clr{faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}"></property>
    <!-- INFO日志文件appender -->
    <appender name="FILE_INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.path}/sp.%d{yyyy-MM-dd}_info.%i.log</FileNamePattern>
            <!--日志文件最大大小-->
            <maxFileSize>100MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!--字符编码-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.file.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--过滤器，此日志记录器只记录INFO级别以上不包含ERROR的日志-->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--被过滤的日志级别-->
            <level>ERROR</level>
            <!--拒绝匹配到级别的日志（即不记录ERROR级别日志）-->
            <onMatch>DENY</onMatch>
            <!--接受没有匹配到的日志（即INFO和ERROR中间的WARN）-->
            <onMismatch>ACCPET</onMismatch>
        </filter>
    </appender>
    <!--  ERROR日志记录appender  -->
    <appender name="FILE_ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--    文件回滚策略     -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!--日志文件输出的文件名-->
            <FileNamePattern>${log.path}/sp.%d{yyyy-MM-dd}_error.%i.log</FileNamePattern>
            <!--日志文件最大大小-->
            <maxFileSize>100MB</maxFileSize>
            <!--日志文件保留天数-->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
        <!--字符编码-->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.file.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!--    此记录器所处理的日志级别    -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--      被过滤的日志级别      -->
            <level>ERROR</level>
            <!--    接受匹配到级别的日志        -->
            <onMatch>ACCEPT</onMatch>
            <!--     拒绝没有匹配到的日志       -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--控制台输出-->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${log.pattern}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!--接受匹配到级别的日志-->
            <onMatch>ACCEPT</onMatch>
            <!--拒绝没有匹配到的日志-->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
</included>
